<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Seeds from the Apple of Discord</title>
    <link>http://malumdiscordi.ae/post/</link>
    <description>Recent content in Posts on Seeds from the Apple of Discord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2016 16:46:24 +0000</lastBuildDate>
    <atom:link href="http://malumdiscordi.ae/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Considering Holistic Learning</title>
      <link>http://malumdiscordi.ae/posts/2016/02/21/considering-holistic-learning/</link>
      <pubDate>Sun, 21 Feb 2016 16:46:24 +0000</pubDate>
      
      <guid>http://malumdiscordi.ae/posts/2016/02/21/considering-holistic-learning/</guid>
      <description>

&lt;p&gt;The process of learning new things is usually thought of as painful by most people (remember school?). However, I&amp;rsquo;m obsessed with aquiring knowledge.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m actually not sure if the term holistic learning was coined there, but I first came across it in an &lt;a href=&#34;https://www.scotthyoung.com/blog/2007/03/25/how-to-ace-your-finals-without-studying/&#34;&gt;article by Scott H. Young&lt;/a&gt;. He describes a mindset of constant learning, independant of the actual subject or topic, for the sake of making more and more connections between single pieces of information. According to him, knowledge is only &amp;lsquo;hard&amp;rsquo; to get, when you try to learn topics by heart without seeing their relation to other concepts.&lt;/p&gt;

&lt;p&gt;This idea is fascinating to me, because I realized that most of my motivation stems from learning and understanding things about the world and not so much from materialistic gains.&lt;/p&gt;

&lt;h3 id=&#34;the-reality-check:a76faf23897e2fefd090c4feab77649c&#34;&gt;The reality check&lt;/h3&gt;

&lt;p&gt;In practice I noticed that when I feel like I&amp;rsquo;m doing pastime things - watching series, reading books, listening to music etc. - I could just as well use the same time to learn. The motivation for these activities is usually to relax and free my mind from everyday-life activities. So I normally don&amp;rsquo;t really want to put some more extra effort on top of that and fry my brain while studying.&lt;/p&gt;

&lt;p&gt;The solution to this dilemma lies, in my opinion, in finding a way to combine both parts, i.e. making the pastime activity a pastime+learning activity. If I&amp;rsquo;m reading books I&amp;rsquo;m reading them in a language I want to practise. If I&amp;rsquo;m watching series I watch them in their original language - or replace them with documentaries, lectures and other video content with an emphasis on information. (Lectures and talks can in fact be very entertaining, if you find a person who is eloquent and smart)&lt;br/&gt;
I&amp;rsquo;m also trying to spice up my freetime with a little bit of brainwork that is very different from what I normally do, for example exercises in maths and physics. This works surprisingly well - I assume that the nature of these tasks are so far off from my normal mental routines that it acts as a distraction just as well.&lt;/p&gt;

&lt;p&gt;In the past I used to do the same thing with software projects - they were the distraction from my everyday life at university. But ever since I started working with code in a commercial environment, I find it harder and harder to continue with hacking in my freetime as well. It&amp;rsquo;s especially sad since the software I work with professionally is usually much less experimental and thrilling.&lt;/p&gt;

&lt;p&gt;To sum this up, in my opinion the idea of learning has been diluted by so many negative aspects that it&amp;rsquo;s very uncommon to find people who have a strong motivation for it on their own. But there are certainly ways to embrace it and continue with self-education on an everyday basis with it not being a chore but a pleasure!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;br/&gt;
Maybe it makes sense to collect a few thought provoking pastime+learning concepts, so I&amp;rsquo;ll put them here whenever I happen to come across one.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dotsies.org/&#34;&gt;dotsies&lt;/a&gt; - when was the last time you used a new alphabet?&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Dependency Injection Considered ~~Harmful~~ Stupid - Part 2</title>
      <link>http://malumdiscordi.ae/posts/2016/02/10/di-considered-stupid-pt2/</link>
      <pubDate>Wed, 10 Feb 2016 05:56:34 +0000</pubDate>
      
      <guid>http://malumdiscordi.ae/posts/2016/02/10/di-considered-stupid-pt2/</guid>
      <description>&lt;p&gt;After messing around with dependency injection frameworks in the &lt;a href=&#34;http://malumdiscordi.ae/posts/2016/01/15/di-considered-stupid-pt1/&#34;&gt;first part&lt;/a&gt;, let&amp;rsquo;s see how we can take our LotR example and unclutter it by using data-oriented functional programming in &lt;a href=&#34;http://elixir-lang.org/&#34;&gt;Elixir&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Remember Frodo from last time? I already mentioned that Frodo&amp;rsquo;s data can be merged with Sam&amp;rsquo;s because they basically do almost everything together - which means that when we use their data for calculations, we will most likely need both of them for meaningful results.&lt;br/&gt;
But not only that, no, we also have duplicated data! It&amp;rsquo;s hidden (well, on purpose) in the AbstractHobbit superclass: The two of them have a certain value for hunger and for miles walked. Since they always march together, however, these two values will more or less stay the same - or at least we&amp;rsquo;d have to make sure to keep them in sync, so that Frodo for example doesn&amp;rsquo;t hunger more and walk less while Sam is already at the Mount Doom.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s revisit the data structure from last time:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Baggins/Gamgee Complex, Revisited&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;defmodule&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Companions&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;2 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;defstruct&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;3 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;         &lt;span style=&#34;color: #776e71&#34;&gt;# they hunger together&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;4 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;miles_walked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;         &lt;span style=&#34;color: #776e71&#34;&gt;# they march together&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;5 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;ring&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt;         &lt;span style=&#34;color: #48b685&#34;&gt;:the_ring&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;# ...hm... this should be stored somewhere else&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;6 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt;   &lt;span style=&#34;color: #f99b15&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color: #776e71&#34;&gt;# and they share their bread!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;7 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that this small elixir snippet tells the compiler to structurally check maps annotated with &lt;code&gt;Companions&lt;/code&gt;. It&amp;rsquo;s not very crucial for our logic later on, since we&amp;rsquo;ll treat input as any kind of map having defined certain keys. However, it illustrates nicely how to define named datastructures in Elixir. They are still a map - but define an additional &lt;code&gt;__struct__&lt;/code&gt; key that holds the atom of the module (&lt;code&gt;Companions&lt;/code&gt; in this case).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, with object oriented thinking, while designing the methods for marching and eating etc., you would probably come up with some kind of functionality that is shared between the two Hobbit objects and put that in the AbstractHobbit class, and some kind of functionality that is very Frodo or Sam specific and pack that in their respective classes. You would also need to reason about the dependency between Frodo and Sam, and how provisions are distributed between them etc.&lt;br/&gt;
By reducing the data we work with to a minimum, however, and by arranging it in a very simple datastructure, we can implement this logic in a rather straightforward way without ever having to think of inheritance, encapsulation etc.&lt;/p&gt;

&lt;p&gt;But before we do that, let&amp;rsquo;s make very sure - down to a specification of sorts - that we know exactly what kind of functionality we need. As opposed to thinking in terms of objects and taking their point of view (i.e. what they can do, whom they can interact with, what kind of state they have etc.), we want to think like a computer, that is, in terms of data transformations (what do I have as an input, what do I need to produce as an output).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we want the Hobbits to reach mount doom by marching (e.g. let&amp;rsquo;s define the goal to be at 100 miles)

&lt;ul&gt;
&lt;li&gt;marching a mile will increase the hunger level, let&amp;rsquo;s say by 2 units, but&lt;/li&gt;
&lt;li&gt;marching is only possible if the hunger level does not exceed a certain value, let&amp;rsquo;s say 100&lt;/li&gt;
&lt;li&gt;if the hobbits are too hungry (see above) they die and cannot complete their mission &lt;em&gt;*BAM BAM BAM!*&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;the hunger level can be decreased by eating provisions, which should be measured in the same units as hunger

&lt;ul&gt;
&lt;li&gt;comsuming X provisions decreases the hunger by X&lt;/li&gt;
&lt;li&gt;the hobbits cannot eat all of their provisions at once, let&amp;rsquo;s say the maximum is 2 units&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;in all the above points, common sense applies (i.e. hunger and provisions can not be negative etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In &lt;a href=&#34;http://elixir-lang.org/&#34;&gt;Elixir&lt;/a&gt;, we can more or less take specifications like this and put it into code:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;&amp;#39;Specification-Driven-Programming&amp;#39; ?&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;defmodule&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Walking&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;# the hunger level should not exceed 100, otherwise fail!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;walk(%{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger})&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;  &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;:error&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;Unable to walk! Dying of hunger - GAME OVER&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;# marching increases the hunger level&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;walk(%{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;miles_walked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;miles}&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;creature)&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;:ok&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;%{creature&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;      &lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;      &lt;span style=&#34;color: #48b685&#34;&gt;miles_walked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;miles&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;}}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;defmodule&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Feeding&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;# common sense and such&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;16 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;feed(%{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions}&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;creature)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;17 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;creature&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;18 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;19 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;# consuming provisions decreases the hunger&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;20 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;feed(%{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions}&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;creature)&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;21 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;# we cannot eat more than 2 provisions at a time (if available and needed)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;22 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;eaten&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;min(hunger)&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;min(provisions)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;23 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;%{creature&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;24 &lt;/span&gt;      &lt;span style=&#34;color: #48b685&#34;&gt;hunger&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;eaten,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;25 &lt;/span&gt;      &lt;span style=&#34;color: #48b685&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;eaten}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;26 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;27 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Okay, let&amp;rsquo;s take a step back. So where is Sam? And, more importantly, where are Frodo, Gandalf and the rest?&lt;/p&gt;

&lt;p&gt;Who cares? We now only require datasets that can store hunger and miles values for walking around - it doesn&amp;rsquo;t really matter whether they are associated with a Hobbit-like entity or something like an Orc.&lt;br/&gt;
This means we just enabled Saurons army to march around, given enough provisions. We also decoupled walking from food consumption - if you&amp;rsquo;re modelling a magical being that feeds on the souls of its enemies, it can still use our walking logic, provided that it can actually hunger.&lt;/p&gt;

&lt;p&gt;In a real application this can be used in many different ways. Consider a Hobbit situation:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Journey&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;defmodule&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Journey&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Feeding&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Walking&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes(%&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;Companions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companions),&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes({&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;:ok&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companions})&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes({&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;:ok&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;Companions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;miles_walked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;miles}})&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;miles&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;Ring destroyed, all good! - GAME OVER&amp;quot;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes({&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;:ok&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;Companions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companions)&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;do&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;companions&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;    &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;consider_eating&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;    &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;walk&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;    &lt;span style=&#34;color: #5bc4bf&#34;&gt;|&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;16 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;17 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes({&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;:error&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;reason}),&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;reason&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;18 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;19 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;consider_eating(%&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;Companions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;20 &lt;/span&gt;      &lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hunger,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;21 &lt;/span&gt;      &lt;span style=&#34;color: #48b685&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions}&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companions)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;22 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;(hunger&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;feed(companions)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;23 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;24 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;consider_eating(companions),&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companions&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;25 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;26 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;27 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# start the journey and wait for what happens...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;28 &lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;Journey&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;time_passes(&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;29 &lt;/span&gt;  &lt;span style=&#34;color: #e7e9db&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;Companions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;30 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;hunger_level&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;31 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;miles_walked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;32 &lt;/span&gt;    &lt;span style=&#34;color: #48b685&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;})&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;33 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# &amp;quot;Unable to walk! Dying of hunger - GAME OVER&amp;quot;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;34 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;35 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# ...guess how much provisions we need to provide&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;36 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# the Hobbits with to survive the journey...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Alright, this concludes my little rant about dependency injection and object orientation. If you&amp;rsquo;d like to read more about the design approach used in this article, I&amp;rsquo;d recommend looking into entity-component-systems, which is covered in great detail and with loads of examples by Adam on &lt;a href=&#34;http://t-machine.org/index.php/category/entity-systems/&#34;&gt;his blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And in case you are wondering what the entity-systems topic has to do with this post: What we created here is the beginning of a component (the datastructure) and two systems operating on that component (the modules for walking and feeding) - a Hobbit entity for example might consist of several such components, usually tied together only by the same entity ID.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Rusty Nuts and Bolts</title>
      <link>http://malumdiscordi.ae/posts/2016/01/22/the-rusty-nuts-and-bolts/</link>
      <pubDate>Fri, 22 Jan 2016 00:00:34 +0000</pubDate>
      
      <guid>http://malumdiscordi.ae/posts/2016/01/22/the-rusty-nuts-and-bolts/</guid>
      <description>

&lt;p&gt;Lately I&amp;rsquo;ve been messing around with the &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; programming language. Here&amp;rsquo;s to the why, how and what.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some context first though:&lt;/strong&gt; I recently decided to refresh and build up my math skills, since the education at my former uni was rather practically oriented and also some time ago already. Additionally, I felt like I&amp;rsquo;m lacking some of the challenges of discovering and understanding new concepts, particularily the more abstract ones.&lt;br/&gt;
It&amp;rsquo;s true that as a Scala developer I usually face new language or framework related hurdles on a daily basis, but thats a totally different level. It&amp;rsquo;s not as exciting to fix a bug compared to finally getting the hang of some category theory topic.&lt;/p&gt;

&lt;p&gt;However, just reading and understanding maths books is actually a rather dull activity. The real magic happens when you&amp;rsquo;re able to apply this new knowledge onto some kind of example. Thats why I came up with the idea of simply trying to implement the concepts of my books as a small library - which is also a rather great opportunity to try out a new programming language!&lt;/p&gt;

&lt;h3 id=&#34;the-use-case-for-rust:2460511c958b5af270a9f1e77d2dc1da&#34;&gt;The use case for Rust&lt;/h3&gt;

&lt;p&gt;Rust claims to be a both system-level and memory-safe language. This means that you should have the ability to take full control of your hardware (you can even write operating systems) while still maintaining some principles that keep you from shooting yourself in the leg with memory related issues.&lt;/p&gt;

&lt;p&gt;Why is this interesting? After all, you can have something very similar with managed C++ or the like.&lt;br/&gt;
The difference is that Rust doesn&amp;rsquo;t rely on garbage collection. The language is designed in such a way that it takes the complexity of manual runtime memory management and embeds it into compile-time compiler-checked features. Essentially, it forces you to write code in a way that will prevent memory leaks, data races, accessing of freed resources and so on.&lt;/p&gt;

&lt;p&gt;Now, &lt;em&gt;usually&lt;/em&gt; I&amp;rsquo;m very comfortable with garbage-collected languages. However, I &lt;em&gt;do&lt;/em&gt; know about the additional overhead and non-determinism caused by the GC. Systems like the latter are also one of the main reasons why software that needs to be of really high-performance is not written in e.g. Java. Wouldn&amp;rsquo;t it be great, then, to have a language that &lt;em&gt;enforces&lt;/em&gt; the same level of safety that a managed language has, but doesn&amp;rsquo;t come with the additional overhead of it at runtime?&lt;br/&gt;
All of this, by the way, is combined with an extensive type system and many features you&amp;rsquo;d find in functional programming languages.&lt;/p&gt;

&lt;h3 id=&#34;my-use-case:2460511c958b5af270a9f1e77d2dc1da&#34;&gt;My use case&lt;/h3&gt;

&lt;p&gt;So, on I went with happily implementing some basic matrix operations in Rust for my &lt;a href=&#34;https://github.com/ephe-meral/halcyon&#34;&gt;brand new library&lt;/a&gt; (or &amp;lsquo;crate&amp;rsquo; in Rust parlance). And, immediately I got stuck fighting with the compiler&amp;hellip; partly because I was not obeying Rusts rules, and partly because I apparently hit a current language limit.&lt;/p&gt;

&lt;p&gt;Consider the following implementation of matrix multiplication independent of the dimension:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;(Don&amp;#39;t) Try This At Home&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; multiply(mat_a&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]], mat_b&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]]) &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]] {&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; dim_i &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mat_a.len();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; dim_k &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mat_b.len();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; dim_j &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mat_b[&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;].len();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;mut&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; result &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0.0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;; dim_j]; dim_i]; &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// nope. array sizes need to be const&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; i &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;..dim_i { &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; j &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;..dim_j { &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; k &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;..dim_k {&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;        result[i][j] &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mat_a[i][k] &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mat_b[k][j];&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    }}}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;result&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This won&amp;rsquo;t compile. First of all, the function &amp;lsquo;borrows&amp;rsquo; two pointers to matrices and returns another one. Here, Rust can&amp;rsquo;t infer the time  that we need these references to be alive, which is part of the &lt;a href=&#34;https://doc.rust-lang.org/book/ownership.html&#34;&gt;ownership&lt;/a&gt; / &lt;a href=&#34;https://doc.rust-lang.org/book/lifetimes.html&#34;&gt;lifetime&lt;/a&gt; semantics. We can fix that by introducing an explicit lifetime variable:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;Fixing the Header&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; multiply&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;&amp;#39;a&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(mat_a&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;&amp;#39;a&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]], mat_b&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;&amp;#39;a&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]]) &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;&amp;#39;a&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]] {&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;2 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Now, another problem is the &lt;code&gt;&amp;amp;&#39;a [[f32]]&lt;/code&gt; style of declaring a two-dimensional array slice. An array slice is a pointer to a part of a statically sized array. The compiler has some trouble defining a type like that though, so we cannot use &lt;code&gt;.len()&lt;/code&gt; on the variables later on. For comparison: We could without a problem call &lt;code&gt;.len()&lt;/code&gt; on an array slice defined like &lt;code&gt;&amp;amp;&#39;a [f32]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But let&amp;rsquo;s ignore that problem for now. I don&amp;rsquo;t really care for arbitrary array slices&amp;hellip; What I actually want is to accept an array directly and pattern match on the deconstructed array size. The declaration for an array goes like this: &lt;code&gt;[T; N]&lt;/code&gt; where &lt;code&gt;T&lt;/code&gt; is the type of the elements of the array, and &lt;code&gt;N&lt;/code&gt; is the size. What I&amp;rsquo;d like to do is something more like this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;If Only...&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; multiply&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;I, J, K&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(mat_a&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;; K]; I], mat_b&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;; J]; K]) &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #fec418&#34;&gt;f32&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;; J]; I] {&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;2 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;With this approach we could also drop all the &lt;code&gt;.len()&lt;/code&gt; calls, since theoretically the sizes would all be known at compile time. E.g. the loop&amp;rsquo;s arguments &lt;code&gt;dim_i&lt;/code&gt; etc. could be filled with &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;J&lt;/code&gt; and &lt;code&gt;K&lt;/code&gt; instead, as if these were variables in a macro that will be replaced when it gets called.&lt;/p&gt;

&lt;p&gt;Speaking of which, to implement this with arbitrary array sizes I finally put the precision tools away and took the sledgehammer: &lt;a href=&#34;https://doc.rust-lang.org/book/macros.html&#34;&gt;Rust Macros&lt;/a&gt;. To implement this multiplication I simply insert a sub-scope that does the whole thing for us in-line, roughly like so:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;Taking the Sledgehammer&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;macro_rules&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; multiply {&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    (&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$mat_a&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;ident&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_i&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;expr, &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_k1&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;expr], &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$mat_b&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;ident&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_k2&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;expr, &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_j&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;expr]) &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; {{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;        assert_eq&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_k1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_k2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;mut&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; res &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mat&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_i&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_j&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;];&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; i &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_i&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; { &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; j &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_j&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; { &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; k &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$dim_k1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; {&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;            res[i][j] &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$mat_a&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;[i][k] &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;$mat_b&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;[k][j];&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;        }}}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;        res&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;    }}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;That way, we still have to give the dimensions explicitly, but thats OK in my opinion. The macro can be invoked with a special syntax:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;Well, It Does the Job&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; a &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0.3&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;1.2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;], [&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;3.2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;9.5&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;], [&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;6.0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0.8&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]];&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;2 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; b &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [[&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;7.0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;3.1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;], [&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;4.3&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;]];&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;3 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;4 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;let&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; result &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; mul&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(a&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;], b&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt; [&lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;As always with macros: Don&amp;rsquo;t use macros - they&amp;rsquo;re like abstractions and we don&amp;rsquo;t use abstractions. Well, only if we must. In this case we do, until Rust implements something like arbitrating over the array size.&lt;/p&gt;

&lt;h3 id=&#34;conclusion:2460511c958b5af270a9f1e77d2dc1da&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;All in all, it&amp;rsquo;s an interesting language. It has loads of concepts that I think are going in the right direction of control &lt;em&gt;AND&lt;/em&gt; safety. After the tiny bits and pieces (nuts and bolts) that I saw of this, I think I&amp;rsquo;ll keep it in mind for when a fast system-level language is needed and C is not an option.&lt;/p&gt;

&lt;p&gt;By the way, with the given example I didn&amp;rsquo;t want to complain about the language. It was just to illustrate my own first steps with Rust, and how quickly I hit borders.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dependency Injection Considered ~~Harmful~~ Stupid</title>
      <link>http://malumdiscordi.ae/posts/2016/01/15/di-considered-stupid-pt1/</link>
      <pubDate>Fri, 15 Jan 2016 10:56:34 +0000</pubDate>
      
      <guid>http://malumdiscordi.ae/posts/2016/01/15/di-considered-stupid-pt1/</guid>
      <description>

&lt;p&gt;Ever used a dependency injection framework? Yes? In an object oriented language?&lt;/p&gt;

&lt;p&gt;If it hadn&amp;rsquo;t been clear before: I dislike object-oriented programming.
Its my personal opinion that OOP is an unecessary overhead &lt;strong&gt;in most cases&lt;/strong&gt;. Yes, there might be some systems that benefit from it, but most of the time (see its usage in Java for example) it is exactly that: Abstraction with no benefit.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s make one thing clear. This opinion is not based on the fact that I haven&amp;rsquo;t spent much time with OOP or that I am simply better with other paradigms. I have worked several years with OOP and design patterns and clever hierarchies and composition and encapsulation and whatnot - to what effect? Boilerplate code that protects developers from other developers just so nothing in the brittle mess of a system breaks and brings it to fall.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hm. I didn&amp;rsquo;t want to write about OOP actually&amp;hellip; let&amp;rsquo;s save that for another post.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The little introduction, however, was necessary to understand why dependency injection basically is nothing more than a little bit of air-freshener ontop of the unmaintainable pile of s**t that an object-oriented-design most probably produced.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; Forgive me for &lt;strong&gt;a)&lt;/strong&gt; using Java in this post and &lt;strong&gt;b)&lt;/strong&gt; for probably making syntactic mistakes. I use it here because it illustrates its own crappyness pretty nicely, and the mistakes might stem from me luckily not using it very often these days.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;the-idea-of-dependency-injection-di:bab3991f7983afcffc1227d0860c2df7&#34;&gt;The idea of dependency injection (DI)&lt;/h3&gt;

&lt;p&gt;Suppose you have two objects, Frodo and Sam. &lt;em&gt;(For a real setup, suppose you have 5k classes and around 50k objects)&lt;/em&gt; Now, suppose object Frodo depends on object Sam for its initialization. &lt;em&gt;(Again, for a real setup, suppose one of those objects depends on 10 others that each depend on 10 others and so forth)&lt;/em&gt; The Frodo object carries the heavy burden of the Ring datastructure, so it needs a supporting companion to take care of the provisions for the long march. &lt;em&gt;(And again, for a real setup, add at least one Gollum dependency as well)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What we want to focus on, is how Frodo would get introduced to Sam and the Ring.&lt;br/&gt;
Let&amp;rsquo;s illustrate this unusefully trivial example with a bit of good old Java, and mix in some object-oriented design stuff to make it more obfuscated (and more real&amp;hellip;):&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Fellowship&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;AbstractHobbit&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;hungerLevel&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;milesWalked&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// incomplete at this point. might define provision etc.&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Frodo&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;AbstractHobbit&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Ring&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;theRing&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;AbstractHobbit&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companion&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Frodo&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Ring&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;theRing&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;AbstractHobbit&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companion&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;theRing&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;theRing&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;companion&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;companion&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;16 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;17 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Sam&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;AbstractHobbit&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;18 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// let&amp;#39;s give Sam a purpose too...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;19 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Food&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;provisions&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;LembasBreadLoaf&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;20 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that I introduced AbstractHobbit, because keeping the code &lt;a href=&#34;https://en.wikipedia.org/wiki/Don&#39;t_repeat_yourself&#34;&gt;DRY&lt;/a&gt; like this is considered a &amp;lsquo;good practice&amp;rsquo; in Java&amp;hellip; and because it looks funny.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, in order to wire this up, all you need is an object that knows both Frodo and Sam:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Sorcerer&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Gandalf&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Hobbit&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ringBearer&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// for obvious reasons, a Gandalf object is&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// a loner and doesn&amp;#39;t have dependencies!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Gandalf&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;Ring&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;theRing&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Ring&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// actually stolen from Bilbo, but who cares&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// initializing Frodo and Sam *within* a Gandalf&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// might be a bit semantically weird,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// but we do it for illustrative purposes&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;Sam&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;sam&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Sam&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;ringBearer&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Frodo&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;theRing&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;sam&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This is what is commonly known as manual &amp;lsquo;constructor-based dependency injection&amp;rsquo;: Instead of letting Frodo create a Sam instance, we have another object that creates a Frodo and &amp;lsquo;injects&amp;rsquo; a Sam into it. &lt;em&gt;I just love this metaphor!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Generally speaking, you could consider any call to a function and passing of parameters as &amp;lsquo;dependency injection&amp;rsquo; - the function depends on its parameters and doesn&amp;rsquo;t know about how they were created and by whom. This leads to the conclusion that actually, all purely functional programming languages &amp;lsquo;use dependency injection&amp;rsquo;, or, if you put it the other way round, using dependency injection extensively will make your object-oriented program a bit more functional in some sense. &lt;em&gt;Which is a good thing, IMHO&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The reason to use this principle or pattern instead of simply creating a Sam inside a Frodo is that the latter is now decoupled from the concrete instance of its companion - it could also be given an instance of a Pippin instead. This makes the Frodo easier to test as you can inject any kind of mocked AbstractHobbit, and it also makes the whole code base easier to maintain, as Frodo doesn&amp;rsquo;t need to be changed when Sam changes. (Though Gandalf might have to change in that case&amp;hellip;)&lt;/p&gt;

&lt;h3 id=&#34;dependency-injection-frameworks:bab3991f7983afcffc1227d0860c2df7&#34;&gt;Dependency-injection frameworks&lt;/h3&gt;

&lt;p&gt;Alright, so far so good. Now, let&amp;rsquo;s do the same thing with Sauron and let him initialize a List of 10000 Orcs with different features, armor, weapons and hierarchies&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;Sauron and the Orcs&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Orc&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Armor&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;armor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Weapon&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;weapon&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Armor&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;armor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Weapon&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;weapon&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;armor&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;armor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;weapon&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;weapon&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;boss&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;Sauron&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;leader&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;List&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;16 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;17 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;createOrcs&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;18 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// the topmost orc in the hierarchy only reports to us!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;19 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;leader&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ChainArmor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;WarHorn&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;20 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;21 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// let&amp;#39;s give it some minions to play with...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;22 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;LeatherArmor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;IronAxe&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;leader&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;23 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ClothArmor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;LongBow&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;leader&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;24 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// ...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;25 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// TODO: continue till orc 10000, and don&amp;#39;t forget&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;26 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// to include some more sub-hierarchies! Divide et impera, HARR!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;27 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;28 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;As we see, it takes quite some lines of code to wire up all the Orcs by doing a manual dependency injection here - and don&amp;rsquo;f forget the Orcs that depend on them, and then the Orcs depend on &lt;em&gt;them&lt;/em&gt; and then&amp;hellip;&lt;/p&gt;

&lt;p&gt;It takes so much code, in fact, that clever people came up with the Idea of abstracting it away by replacing that Sauron object with a somewhat omniscient registry of Orcs and other objects - in the following referred to as Tolkien (or dependency injection framework).&lt;/p&gt;

&lt;p&gt;Each Orc object would then declare a list of stuff it needs, go to Tolkien, hand it that list, and get the actual &amp;lsquo;stuff&amp;rsquo; back.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s see how this can be done with the help of &lt;a href=&#34;https://github.com/google/guice&#34;&gt;Guice&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;So, all it takes to inject armor, weapon and boss into an Orc now is to place the &lt;code&gt;@Inject&lt;/code&gt; annotation above its constructor and off we go!&lt;/p&gt;

&lt;p&gt;Oh wait, thats not true&amp;hellip;&lt;/p&gt;

&lt;p&gt;Yes, the DI framework can figure out some instance of Armor, Weapon and Boss. But no, it&amp;rsquo;s not guaranteed to be the instance that we want. What if the Orc object gets the wrong Armor? Or the wrong boss? The battle would be over before it began.&lt;/p&gt;

&lt;p&gt;So, necessary configuration doesn&amp;rsquo;t magically go away by using DI frameworks!&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Tedium of Tolkien&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;TolkienModule&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;AbstractModule&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;@Override&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;  &lt;span style=&#34;color: #815ba4&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color: #fec418&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// this should be filled with bindings from classes&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// to more concrete sub-classes, instances, providers etc.&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// however, we have interdependencies between instances of&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// the same class (Orc) which requires some extra work...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// this provider method will get the Sauron object injected, how cool!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// (that is, if we bound it to type Creature and annotated it&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// with the name &amp;quot;Sauron&amp;quot; in some other DI module)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;@Provides&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;@Named(&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;Boss&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;  &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;createBoss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(@Named(&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;Sauron&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;sauron&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ChainArmor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;WarHorn&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;sauron&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;16 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// looks like a cyclic dependency to me:&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;17 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;sauron&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;setLeader&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;18 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;19 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;20 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;21 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;@Provides&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;@Named(&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;Soldiers&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;22 &lt;/span&gt;  &lt;span style=&#34;color: #e7e9db&#34;&gt;List&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;createSoldiers&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(@Named(&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;Boss&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Creature&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;23 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;List&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;24 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;LeatherArmor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;IronAxe&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;25 &lt;/span&gt;    &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;ClothArmor&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;LongBow&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;26 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// ...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;27 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// erm. wait a second. we still declare all that stuff explicitly?&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;28 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// also, we only have one level of army hierarchy so far...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;29 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// we could probably somehow make this work with nice tools like&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;30 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// Multibindings and AssistedInject and FactoryModuleBuilder&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;31 &lt;/span&gt;    &lt;span style=&#34;color: #776e71&#34;&gt;// but it gives me the chills only thinking about that!&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;32 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;33 &lt;/span&gt;    &lt;span style=&#34;color: #815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;orcs&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;34 &lt;/span&gt;  &lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;35 &lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I can&amp;rsquo;t guarantee that the code above works (it&amp;rsquo;s incomplete anyways). This specific scenario is generally hard to realize with DI frameworks, since their common use case is more the injection of singleton service-like objects.&lt;/p&gt;

&lt;p&gt;What I tried to show, though, is that once you use this or that design pattern or have a more non-standard object dependency hierarchy, you quickly get into the same or worse trouble that you&amp;rsquo;d get into when injecting the dependencies manually.&lt;/p&gt;

&lt;p&gt;Although it looks as if these two approaches have the potential to simplify the initialization of objects in complex dependency-trees, they still both introduce extra code that does all this messy wiring-up.&lt;/p&gt;

&lt;p&gt;Why, though? What makes code-decoupling and dependency management so hard? Well, let&amp;rsquo;s see&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;the-root-of-the-evil-span-sqrt-1-span:bab3991f7983afcffc1227d0860c2df7&#34;&gt;The root of the evil &lt;span&gt;\(\sqrt{-1}\)&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;In the Lord of the Rings, that would be Sauron, but in our case it is something else:&lt;br/&gt;
It&amp;rsquo;s the deficits that come with using abstractions on top of abstractions to handle the complexity imposed by abstractions.&lt;/p&gt;

&lt;p&gt;What have we done thus far? No logic. Just boilerplate code and declaring datastructures. We can just as well kick out the earlier, unclutter the code and strip it from its object-oriented parts. Revisit the classes and see what fields they have. I&amp;rsquo;ll throw in a bit of pseudo code here to make it clearer:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Lord of the Rings, Abridged&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 1 &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;Hobbit&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 2 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;hungerLevel&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Integer&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 3 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;milesWalked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Integer&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 4 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 5 &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;Frodo&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Hobbit with&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 6 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;theRing&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Ring&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 7 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;companion&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Hobbit&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 8 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt; 9 &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;Sam&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Hobbit with&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;10 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Food&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;11 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;12 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# Gandalf is just needed for DI in our example,&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;13 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# so we leave that out here - it doesnt contain any logic&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;14 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;15 &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;Orc&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Creature with&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;16 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;armor&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Armor&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;17 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;weapon&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Weapon&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;18 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;boss&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Creature&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;19 &lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;20 &lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;# Sauron and Tolkien are left aside as well&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;For the following we want to consider &lt;code&gt;Ring&lt;/code&gt;, &lt;code&gt;Food&lt;/code&gt;, &lt;code&gt;Weapon&lt;/code&gt; and &lt;code&gt;Armor&lt;/code&gt; to just be more datastructure declarations. Think of them as the &amp;lsquo;stats&amp;rsquo; of a weapon or the amount of kalories in the food - it can be as simple as an integer sometimes!&lt;/p&gt;

&lt;p&gt;These definitions are all we need for our calculations of the fighting orcs and marching companions who need provisions to stay alive on the way. The rest of the code from the beginning of this post does have no purpose other than filling these fields with data, in an environment where it is (seemingly) hard and complicated to do so. It does not even implement any of the logic of marching and fighting, just the abstract realtionships between objects like Frodo and Sam.&lt;br/&gt;Actually, for our scenario, we might argue that it is not even important to know about the relationship of those two, and might just consider them as one unit like so:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight-caption&#34;&gt;The Baggins/Gamgee Complex&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;1 &lt;/span&gt;&lt;span style=&#34;color: #f99b15&#34;&gt;Companions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;2 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;hungerLevel&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;# they hunger together&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;3 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;milesWalked&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;# they march together&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;4 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;theRing&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Ring&lt;/span&gt;        &lt;span style=&#34;color: #776e71&#34;&gt;# ...hm...&lt;/span&gt;
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;5 &lt;/span&gt;  &lt;span style=&#34;color: #f99b15&#34;&gt;provisions&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;Food&lt;/span&gt;     &lt;span style=&#34;color: #776e71&#34;&gt;# and they share their bread!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This might be counter intuitive. But as a developer we know the whole story. We can decide what kind of datastructure still obeys the semantics and makes implementing the business logic as simple as possible. By doing so, we can avoid complex dependencies right from the start, and filling these few fields with data initially is also not very difficult.&lt;br/&gt;
Remember that this initial configuration (especially if we are dealing with something as diverse as the orc-army) is &lt;strong&gt;almost always&lt;/strong&gt; required and no tool can make it magically disappear.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s a good thing! If you know what kind of data is fed into a program when it starts, you have a better chance of understanding the behaviour of it! If that data is split into pieces, mixed with logic and spread all over the object-tree though, constantly changing and producing states that are complex to trace and understand, then you easily end up in an unmaintainable mess of a project. Throwing a DI framework onto that might help in some cases, but why not making it less complex right from the start?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note at this point that you can &lt;strong&gt;always&lt;/strong&gt; refactor code to contain &lt;strong&gt;either&lt;/strong&gt; logic &lt;strong&gt;or&lt;/strong&gt; datastructures, so defining something like the example above is not impossible under real conditions. The only reason why we didn&amp;rsquo;t do it right from the start is because OOP is all about mixing up data and logic.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In a nutshell, if you&amp;rsquo;re using DI because you think it is crucial for a project to be maintainable in the long run, you&amp;rsquo;re probably not doing something harmful, but simply something unecessary. That&amp;rsquo;s not because DI is intrinsically bad, but because the weird principles of OOP force you to use something like that to manage all the dependencies of your objects. In carefully designing the datastructures outside of the context of an object, it might, however, be possible to avoid all that. So why not using a simpler, more data-oriented approach instead?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For the OOP &amp;amp; DI lovers: If you find this post offensive, you probably suffer from a phenomenon known as the &amp;lsquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Law_of_the_instrument&#34;&gt;golden hammer&lt;/a&gt;&amp;rsquo;. Please take some time and think the arguments through. A classical program is never more than data-input -&amp;gt; computation -&amp;gt; data-output.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And some famous last words: I&amp;rsquo;ll give an example of a useful data-oriented functional implementation of the situation described above in a follow-up post, promised! In the meantime, I recommend reading &lt;a href=&#34;http://gamesfromwithin.com/data-oriented-design&#34;&gt;Noel&amp;rsquo;s article&lt;/a&gt; about further aspects of data-oriented design, like performance gain - especially for games.&lt;/p&gt;

&lt;p&gt;UPDATE:&lt;br/&gt;
As promised, here&amp;rsquo;s the &lt;a href=&#34;http://malumdiscordi.ae/posts/2016/02/10/di-considered-stupid-pt2/&#34;&gt;follow-up post&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing &#39;to entice so.&#39;</title>
      <link>http://malumdiscordi.ae/posts/2016/01/06/introducing-to-entice-so./</link>
      <pubDate>Wed, 06 Jan 2016 00:34:09 +0000</pubDate>
      
      <guid>http://malumdiscordi.ae/posts/2016/01/06/introducing-to-entice-so./</guid>
      <description>

&lt;p&gt;Despite the misleading title of this - it could as well be a social engineering guide - I&amp;rsquo;m going to introduce a free, libre and open-source software project that I&amp;rsquo;m in charge of.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s the first thing of this sort that I&amp;rsquo;ll write about and also the first real post here. One might actually say that I&amp;rsquo;ve gone through the lengths of creating this blog just to write about this specific project and related topics. (But I won&amp;rsquo;t, promised)&lt;/p&gt;

&lt;h3 id=&#34;so-what-are-we-talking-about:dcd2377f0c9732c2dd2950dcbd2cf62d&#34;&gt;So what are we talking about?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/entice/entice&#34;&gt;&amp;lsquo;to entice so.&amp;rsquo;&lt;/a&gt; (or just &amp;lsquo;entice&amp;rsquo; for short) is a client/server application aiming to provide an MMORPG sandbox of sorts.
While this fact in itself might not be very interesting, the approach used and the technology involved actually are - at least in my humble opinion.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll split this topic up into several posts to highlight different aspects of the project, but let me at least give a little overview at this point.&lt;/p&gt;

&lt;p&gt;The code covers both &lt;a href=&#34;https://github.com/entice/client&#34;&gt;client&lt;/a&gt; and &lt;a href=&#34;https://github.com/entice/web&#34;&gt;server&lt;/a&gt; side parts, even though this is not a complete game on its own. Actually, we&amp;rsquo;re instrumenting an existing &lt;em&gt;*cough* commercial *cough*&lt;/em&gt; client and try to follow the gameplay logic more or less. To be honest it&amp;rsquo;s not very difficult to figure out which game I&amp;rsquo;m talking about, but for me personally the whole point of this is less about creating a so-called private server and more about experimenting with MMORPG server designs.&lt;/p&gt;

&lt;h3 id=&#34;project-structure:dcd2377f0c9732c2dd2950dcbd2cf62d&#34;&gt;Project structure&lt;/h3&gt;

&lt;p&gt;Splitting the project up in this instrumentation part on the client side and the server part with the gameplay logic, we gain an excellent and clean way of working on each independently. I&amp;rsquo;ll go into more detail about this development model in a follow-up post later. For now, lets just say that it works out perfectly for our little team, since our collaborator&amp;rsquo;s schedules differ a lot.&lt;/p&gt;

&lt;h3 id=&#34;technology:dcd2377f0c9732c2dd2950dcbd2cf62d&#34;&gt;Technology&lt;/h3&gt;

&lt;p&gt;Technology-wise, the client part is written in C/C++ and &lt;a href=&#34;https://msdn.microsoft.com/en-us/vstudio/hh341490.aspx&#34;&gt;C#&lt;/a&gt; relying on standard .NET features, whereas the server is written in &lt;a href=&#34;http://elixir-lang.org/&#34;&gt;Elixir&lt;/a&gt; using the &lt;a href=&#34;http://www.phoenixframework.org/&#34;&gt;Phoenix framework&lt;/a&gt;. More about the reasons for the choice of these technology stacks later.&lt;/p&gt;

&lt;p&gt;Also, since I&amp;rsquo;m most involved with the server side code, I&amp;rsquo;ll focus on those parts in the upcoming posts. If you want to learn more about the client side software design, you can either check out the code in our project &lt;a href=&#34;https://github.com/entice&#34;&gt;repos&lt;/a&gt;, or get in touch with the main dev of these parts.&lt;/p&gt;

&lt;p&gt;To finish up this rather short intro, be aware that all we&amp;rsquo;re talking about here is freely accessible to anyone, and improvements and discussion of the code is always welcome. Feel free to join us on &lt;code&gt;#gwlpr&lt;/code&gt; in the &lt;code&gt;irc.rizon.net&lt;/code&gt; IRC net, and create github issues, forks and pull-requests to help improve the project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Instruction Leaflet</title>
      <link>http://malumdiscordi.ae/posts/2015/12/28/instruction-leaflet/</link>
      <pubDate>Mon, 28 Dec 2015 14:41:33 +0000</pubDate>
      
      <guid>http://malumdiscordi.ae/posts/2015/12/28/instruction-leaflet/</guid>
      <description>

&lt;p&gt;In absence of a better idea of splitting things up, I&amp;rsquo;ll use this as a general brain and idea dump for everything and nothing.&lt;/p&gt;

&lt;h3 id=&#34;about-this-blog-the-weather-me-and-the-meaning-of-life:12775062aa95f53d4ae64b8b5b9a7e91&#34;&gt;About this blog, the weather, me and the meaning of life&lt;/h3&gt;

&lt;p&gt;So what you can and will find here is stuff that I personally considered interesting, thought provoking, funny, smart or otherwise worthwhile posting - which probably involves techy and nerdy topics, as well as philosophical discussions, general scientific considerations, languages, music, arts, learning and absurdities.&lt;/p&gt;

&lt;p&gt;Some things I definitively plan to write about: Free, Libre and Open-Source Projects, Operating Systems and the Usage of Computers in General, Programming Languages, -Paradigms and -Concepts (and how all that stuff relates to the industry), Sentient Machines and the Future of Humanity, Insights from a Modern (digital &amp;amp; non-digital) Life, and How to Get Along With People&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;so-who-am-i:12775062aa95f53d4ae64b8b5b9a7e91&#34;&gt;So, who am I?&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;(No, this is not the meaning of life part yet, hang tight)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I consider myself an all-time student of everything&amp;hellip;&lt;/p&gt;

&lt;p&gt;Well, more seriously, I spend most of my time either working on software projects for clients - I&amp;rsquo;m a self-acclaimed expert in all things Scala/JVM and backend API related - or with my colleagues from &lt;a href=&#34;http://innoki.de&#34;&gt;INNOKI&lt;/a&gt; where we facilitate innovative workmodes in big and small teams and enterprises.&lt;/p&gt;

&lt;p&gt;Apart from that, my other aspirations go more into the direction of research and science: Personally, I find it far more rewarding and motivating to get to know and understand the world, compared to earning, managing and spending money - as most of my fellow humans seem to enjoy these days.&lt;/p&gt;

&lt;h3 id=&#34;alright-but-what-about-the-weather-and-that-meaning-of-life-thingy:12775062aa95f53d4ae64b8b5b9a7e91&#34;&gt;Alright, but what about the weather and that meaning of life thingy?&lt;/h3&gt;

&lt;p&gt;I also like rhetoric questions and weird humor.&lt;/p&gt;

&lt;p&gt;~ Johanna&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>